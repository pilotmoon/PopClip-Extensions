{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "ActionFunction": {
            "description": "A calable object, with additional properties to define its title, icon and other properties.",
            "properties": {
                "after": {
                    "description": "An optional step to peform after the main action.",
                    "enum": [
                        "copy",
                        "copy-result",
                        "cut",
                        "paste",
                        "paste-plain",
                        "paste-result",
                        "popclip-appear",
                        "preview-result",
                        "show-result",
                        "show-status"
                    ],
                    "type": "string"
                },
                "app": {
                    "$ref": "#/definitions/AssociatedApp",
                    "description": "Declares the application or website associated with this action, if any."
                },
                "before": {
                    "description": "An optional step to peform before the main action.",
                    "enum": [
                        "copy",
                        "cut",
                        "paste",
                        "paste-plain",
                        "popclip-appear",
                        "show-status"
                    ],
                    "type": "string"
                },
                "captureHtml": {
                    "description": "Whether PopClip will capture HTML and Markdown content for the selection. Default is no.\n\n#### Notes\nThe HTML can be accessed in the [[Selection.html]] property, and the Markdown\ncan be accessed in the [[Selection.markdown]] property.\n\nIf the selection is not HTML-backed, PopClip will generate HTML from any available RTF or plain text\ncontent.",
                    "type": "boolean"
                },
                "captureRtf": {
                    "description": "Whether PopClip will capture RTF (Rich Text Format) content for the selection. Default is no.\n\n#### Notes\nCaptured RTF can be accessed in the [[Selection.items]] property under the `public.rtf` key.",
                    "type": "boolean"
                },
                "excludedApps": {
                    "description": "Array of bundle identifiers for which the extension should not appear. The action will not\nappear if PopClip is used in any of the specified apps.\n\nThis property has no effect on dynamically generated actions.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "icon": {
                    "description": "A string to define the action's icon. See [[IconString]].\n\nIf no icon is defined here, the extension's {@link Extension.icon | icon} will be used, if any.\nSetting to `null` explicitly sets the action to have no icon.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "identifier": {
                    "description": "A unique identifying string.\n\n#### Notes\n\nAn identifier for an action can be any string of your choosing.\n\nAn identifier for the extension itself, if provided, should ideally be globally unique.\n\nI suggest using a reverse DNS-style identifier. For example `com.example.myextension`.\n\nIf you don't have your own domain name, you can use anything you like — it doesn't matter, as long as it is unique.\n\nDo not use the `com.pilotmoon.` prefix for your own extension.",
                    "type": "string"
                },
                "preserveColor": {
                    "description": "Whether the action's icon should be displayed in its orignal color rather than monochrome.",
                    "type": "boolean"
                },
                "regex": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/RegExp"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "A regular expression to decide whether this action appears in the popup.\n\n* If no regex is specified here, the action takes the value of [[Extension.regex]].\n* If no regex is specified there either, the action will match any input.\n\n#### Notes\n\nYou may express the value either as a\n[JavaScript regular expression literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n(or otherwise constructed `RegExp` object), or as a string.\n\n* If you supply a `RegExp` it will be evaluated in the JavaScript engine.\n* If you supply a string it will be evaluated by macOS natively using the `NSRegularExpression` API (same as for 'classic' PopClip extensions).\n\nIf the regex matches the selected text, the action will be shown in the popup and\nthe first occurrence of the matched text is accessible later via {@link Input.matchedText | matchedText}.\n\nIf there is no match, the action is excluded from the popup.\n\nThe regex's `lastIndex` is reset before and after each invocation, so the `g` (global) and `y` (sticky) flags have no effect.\n\nThis property has no effect on dynamically generated actions.\n\n#### Example\n```js\nregex = /abc/i   // Example regex 'abc' with 'i' (case insensitive) flag\n                 // Matches abc, ABC, Abc, etc.\n```"
                },
                "requiredApps": {
                    "description": "Array of bundle identifiers for which the extension should appear. The action will only\nappear if PopCLip is used in one of the specified apps.\n\nThis property has no effect on dynamically generated actions.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "requirements": {
                    "description": "An array of conditions which must be met for this action to appear — see [[Requirement]].\n\n* If no array is specified here, the action takes the value of [[Extension.requirements]].\n* If no array is specified there either, the action takes the default value `[\"text\"]`.\n\n#### Notes\n\nWhen multiple conditions are specified, all of them must be satisfied.\n\nAn empty array (`[]`) indicates no requirements at all, meaning the action will always appear.\n\nThis property has no effect on dynamically generated actions.",
                    "items": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "enum": [
                                    "!copy",
                                    "!cut",
                                    "!email",
                                    "!emails",
                                    "!formatting",
                                    "!paste",
                                    "!path",
                                    "!text",
                                    "!url",
                                    "!urls",
                                    "copy",
                                    "cut",
                                    "email",
                                    "emails",
                                    "formatting",
                                    "paste",
                                    "path",
                                    "text",
                                    "url",
                                    "urls"
                                ],
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "stayVisible": {
                    "description": "Whether PopClip's popup should stay on screen after clicking this action's button. Default is no.\n\n#### Notes\nAn example of this in use is the Formatting extension.",
                    "type": "boolean"
                },
                "title": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/StringTable"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The action's title. The title is displayed in the action button if there is no icon.\nFor extensions with icons, the title is displayed in the tooltip.\n\nIf no title is defined here, the extension's [`[name]] will be used, if any."
                }
            },
            "type": "object"
        },
        "ActionObject": {
            "description": "An alternative way to define as an action, as a non-callable object with a `code` member.",
            "properties": {
                "after": {
                    "description": "An optional step to peform after the main action.",
                    "enum": [
                        "copy",
                        "copy-result",
                        "cut",
                        "paste",
                        "paste-plain",
                        "paste-result",
                        "popclip-appear",
                        "preview-result",
                        "show-result",
                        "show-status"
                    ],
                    "type": "string"
                },
                "app": {
                    "$ref": "#/definitions/AssociatedApp",
                    "description": "Declares the application or website associated with this action, if any."
                },
                "before": {
                    "description": "An optional step to peform before the main action.",
                    "enum": [
                        "copy",
                        "cut",
                        "paste",
                        "paste-plain",
                        "popclip-appear",
                        "show-status"
                    ],
                    "type": "string"
                },
                "captureHtml": {
                    "description": "Whether PopClip will capture HTML and Markdown content for the selection. Default is no.\n\n#### Notes\nThe HTML can be accessed in the [[Selection.html]] property, and the Markdown\ncan be accessed in the [[Selection.markdown]] property.\n\nIf the selection is not HTML-backed, PopClip will generate HTML from any available RTF or plain text\ncontent.",
                    "type": "boolean"
                },
                "captureRtf": {
                    "description": "Whether PopClip will capture RTF (Rich Text Format) content for the selection. Default is no.\n\n#### Notes\nCaptured RTF can be accessed in the [[Selection.items]] property under the `public.rtf` key.",
                    "type": "boolean"
                },
                "code": {
                    "description": "Same function signature as [[ActionFunction]]",
                    "type": "object"
                },
                "excludedApps": {
                    "description": "Array of bundle identifiers for which the extension should not appear. The action will not\nappear if PopClip is used in any of the specified apps.\n\nThis property has no effect on dynamically generated actions.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "icon": {
                    "description": "A string to define the action's icon. See [[IconString]].\n\nIf no icon is defined here, the extension's {@link Extension.icon | icon} will be used, if any.\nSetting to `null` explicitly sets the action to have no icon.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "identifier": {
                    "description": "A unique identifying string.\n\n#### Notes\n\nAn identifier for an action can be any string of your choosing.\n\nAn identifier for the extension itself, if provided, should ideally be globally unique.\n\nI suggest using a reverse DNS-style identifier. For example `com.example.myextension`.\n\nIf you don't have your own domain name, you can use anything you like — it doesn't matter, as long as it is unique.\n\nDo not use the `com.pilotmoon.` prefix for your own extension.",
                    "type": "string"
                },
                "preserveColor": {
                    "description": "Whether the action's icon should be displayed in its orignal color rather than monochrome.",
                    "type": "boolean"
                },
                "regex": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/RegExp"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "A regular expression to decide whether this action appears in the popup.\n\n* If no regex is specified here, the action takes the value of [[Extension.regex]].\n* If no regex is specified there either, the action will match any input.\n\n#### Notes\n\nYou may express the value either as a\n[JavaScript regular expression literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n(or otherwise constructed `RegExp` object), or as a string.\n\n* If you supply a `RegExp` it will be evaluated in the JavaScript engine.\n* If you supply a string it will be evaluated by macOS natively using the `NSRegularExpression` API (same as for 'classic' PopClip extensions).\n\nIf the regex matches the selected text, the action will be shown in the popup and\nthe first occurrence of the matched text is accessible later via {@link Input.matchedText | matchedText}.\n\nIf there is no match, the action is excluded from the popup.\n\nThe regex's `lastIndex` is reset before and after each invocation, so the `g` (global) and `y` (sticky) flags have no effect.\n\nThis property has no effect on dynamically generated actions.\n\n#### Example\n```js\nregex = /abc/i   // Example regex 'abc' with 'i' (case insensitive) flag\n                 // Matches abc, ABC, Abc, etc.\n```"
                },
                "requiredApps": {
                    "description": "Array of bundle identifiers for which the extension should appear. The action will only\nappear if PopCLip is used in one of the specified apps.\n\nThis property has no effect on dynamically generated actions.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "requirements": {
                    "description": "An array of conditions which must be met for this action to appear — see [[Requirement]].\n\n* If no array is specified here, the action takes the value of [[Extension.requirements]].\n* If no array is specified there either, the action takes the default value `[\"text\"]`.\n\n#### Notes\n\nWhen multiple conditions are specified, all of them must be satisfied.\n\nAn empty array (`[]`) indicates no requirements at all, meaning the action will always appear.\n\nThis property has no effect on dynamically generated actions.",
                    "items": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "enum": [
                                    "!copy",
                                    "!cut",
                                    "!email",
                                    "!emails",
                                    "!formatting",
                                    "!paste",
                                    "!path",
                                    "!text",
                                    "!url",
                                    "!urls",
                                    "copy",
                                    "cut",
                                    "email",
                                    "emails",
                                    "formatting",
                                    "paste",
                                    "path",
                                    "text",
                                    "url",
                                    "urls"
                                ],
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "stayVisible": {
                    "description": "Whether PopClip's popup should stay on screen after clicking this action's button. Default is no.\n\n#### Notes\nAn example of this in use is the Formatting extension.",
                    "type": "boolean"
                },
                "title": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/StringTable"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The action's title. The title is displayed in the action button if there is no icon.\nFor extensions with icons, the title is displayed in the tooltip.\n\nIf no title is defined here, the extension's [`[name]] will be used, if any."
                }
            },
            "type": "object"
        },
        "AssociatedApp": {
            "description": "Declares information about an app or website that this extension interacts with.",
            "properties": {
                "bundleIdentifiers": {
                    "description": "List of possible bundle identifiers of this app.\n\nPopCLip uses this list when checking for the presence of the app. Include here all application variants\nthat work with this extension. In the simplest case there may\nbe just one bundle ID, but an app may have alternative bundle IDs such as for free/pro variants,\nan App Store version, a stand-alone version, a Setapp version, and so on.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "checkInstalled": {
                    "description": "Indicates whether PopClip should check for the presence of the app on the computer. If not found,\nPopCLip will display a message prompting the user to install the app. Default is no. Not applicable for websites.",
                    "type": "boolean"
                },
                "link": {
                    "description": "Web page where user can obtain the app, e.g. \"https://www.literatureandlatte.com/scrivener\".\n\nPopClip will link to this page if the \"missing app\" dialog is shown. The link is also used\nthis in the online extension listing.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the app. Fo example \"Scrivener\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Option": {
            "description": "Defines a single extension option.",
            "properties": {
                "defaultValue": {
                    "description": "The default value of the option. If ommitted, `string` options default to the empty string,\n`boolean` options default to true, and `multiple` options default to the top item in the list.\nA `password` field may not have a default value.",
                    "type": [
                        "string",
                        "boolean"
                    ]
                },
                "description": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/StringTable"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "An optional longer explanantion of this option, to be shown in the UI."
                },
                "icon": {
                    "description": "An icon for this option. It is only displayed for boolean options, next to the check box. See [[IconString]].",
                    "type": "string"
                },
                "identifier": {
                    "description": "An identifying string for this option.",
                    "type": "string"
                },
                "label": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/StringTable"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "A short label for this option."
                },
                "type": {
                    "description": "The kind of option, one of:\n * `string`: a text box for free text entry,\n * `boolean`: a check box,\n * `multiple`: multiple-choice drop-down with predefined options,\n * `password`: a password entry field (passwords are stored in user's keychain instead of preferences),\n * `heading`: adds a heading in the user interface, but does not actually define an option",
                    "enum": [
                        "boolean",
                        "heading",
                        "multiple",
                        "password",
                        "string"
                    ],
                    "type": "string"
                },
                "valueLabels": {
                    "description": "Display names corresponding to the entries in the [[values]] array. These are shown in the option UI.\nIf ommitted, the raw value strings are shown instead.",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/StringTable"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "description": "A type to represent a localizable string.\n\n#### Notes\n\nThe value may be either a string or an object.\nIf you supply a string, that string is used.\nIf you supply a [[StringTable]] object, PopClip will\ndisplay the string for the user's preferred language if possible, with fallback to the `en` string.\n\n#### Example\n```js\noption.label = \"Color\" // just use this string\noption.label = { en: \"Color\", \"en-GB\": \"Colour\", fr: \"Couleur\", \"zh-Hans\": \"颜色\" }"
                    },
                    "type": "array"
                },
                "values": {
                    "description": "The possible values for a `multiple` option.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RegExp": {
            "properties": {
                "dotAll": {
                    "type": "boolean"
                },
                "flags": {
                    "type": "string"
                },
                "global": {
                    "type": "boolean"
                },
                "ignoreCase": {
                    "type": "boolean"
                },
                "lastIndex": {
                    "type": "number"
                },
                "multiline": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "sticky": {
                    "type": "boolean"
                },
                "unicode": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "StringTable": {
            "additionalProperties": {
                "type": "string"
            },
            "description": "An object mapping language codes to strings. See [[LocalizableString]].\n\n#### Notes\n\nAn `en` string is required, as the default fallback, and it should usually\ncontain a string in US English. _(That's the macOS default,\nas a Brit this of course pains me! -Nick)_\n\nThe predefined languages in this interface definition are the ones that\nPopClip currently ships with translations for.\nBut you can include other languages too.\nFor example you can include `en-GB` or `en-CA` string to have different\nregional spellings.",
            "properties": {
                "da": {
                    "description": "Danish language string.",
                    "type": "string"
                },
                "de": {
                    "description": "German language string.",
                    "type": "string"
                },
                "en": {
                    "description": "English (US) language string.",
                    "type": "string"
                },
                "es": {
                    "description": "Spanish language string.",
                    "type": "string"
                },
                "fr": {
                    "description": "French language string.",
                    "type": "string"
                },
                "it": {
                    "description": "Italian language string.",
                    "type": "string"
                },
                "ja": {
                    "description": "Japanese language string.",
                    "type": "string"
                },
                "ko": {
                    "description": "Korean language string.",
                    "type": "string"
                },
                "nl": {
                    "description": "Dutch language string.",
                    "type": "string"
                },
                "pt-BR": {
                    "description": "Brazilian Portuguese language string.",
                    "type": "string"
                },
                "ru": {
                    "description": "Russian language string.",
                    "type": "string"
                },
                "vi": {
                    "description": "Vietnamese language string.",
                    "type": "string"
                },
                "zh-Hans": {
                    "description": "Simplified Chinese language string.",
                    "type": "string"
                },
                "zh-Hant": {
                    "description": "Traditional Chinese language string.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "description": "The Extension object defines the PopClip extension.\n\nYou create this in Config.js and export it with `define()`.\n\nAny properties omitted from the extension object in Config.js (apart from [[action]] and [[actions]])\nfall back to the equivalent value in the Config.json file, if it is present.\n\n\n#### Examples\n\n*Simple extension* — The following Config.js defines a complete extension:\n\n* Config.js\n```js\n  define({\n    identifier: \"com.example.my-extension\",\n    name: \"My Extension\",\n    action: function(selection) {\n      popclip.showText(\"Your text is: \" + selection.text)\n    }\n  })\n```\n\n*Example with Config.json* — The previous example is equivalent to:\n\n* Config.json:\n```json\n{\n    \"identifier\": \"com.example.my-extension\",\n    \"name\": \"My Extension\",\n}\n```\n\n* Config.js:\n```js\n  define({\n    action: function(selection) {\n      popclip.showText(\"Your text is: \" + selection.text)\n    }\n  })\n```",
    "properties": {
        "action": {
            "anyOf": [
                {
                    "$ref": "#/definitions/ActionFunction"
                },
                {
                    "$ref": "#/definitions/ActionObject"
                }
            ],
            "description": "Simplified property to define a single action."
        },
        "actions": {
            "anyOf": [
                {
                    "description": "A population function dynamically generates the actions for the extension. See [[Extension.actions]].",
                    "type": "object"
                },
                {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/ActionFunction"
                            },
                            {
                                "$ref": "#/definitions/ActionObject"
                            }
                        ],
                        "description": "An action can be defined using either the callable object or non-callable object form."
                    },
                    "type": "array"
                }
            ],
            "description": "Define the actions to go in PopClip's popup. This can be an array or a function.\n\n* If it's an array, the supplied actions are used in the popup, subject to meeting the\nrequirements and regex conditions.\n\n* If it's a function, it is called by PopClip to dynamically populate the popup with actions from this extension.\nSetting requirements and regex keys has no effect on dynamic actions — the function itself is responsible for deciding what actions to show."
        },
        "after": {
            "description": "An optional step to peform after the main action.",
            "enum": [
                "copy",
                "copy-result",
                "cut",
                "paste",
                "paste-plain",
                "paste-result",
                "popclip-appear",
                "preview-result",
                "show-result",
                "show-status"
            ],
            "type": "string"
        },
        "app": {
            "$ref": "#/definitions/AssociatedApp",
            "description": "Declares the application or website associated with this action, if any."
        },
        "auth": {
            "description": "Function signature of the [[Extension.auth]] method.",
            "type": "object"
        },
        "before": {
            "description": "An optional step to peform before the main action.",
            "enum": [
                "copy",
                "cut",
                "paste",
                "paste-plain",
                "popclip-appear",
                "show-status"
            ],
            "type": "string"
        },
        "captureHtml": {
            "description": "Whether PopClip will capture HTML and Markdown content for the selection. Default is no.\n\n#### Notes\nThe HTML can be accessed in the [[Selection.html]] property, and the Markdown\ncan be accessed in the [[Selection.markdown]] property.\n\nIf the selection is not HTML-backed, PopClip will generate HTML from any available RTF or plain text\ncontent.",
            "type": "boolean"
        },
        "captureRtf": {
            "description": "Whether PopClip will capture RTF (Rich Text Format) content for the selection. Default is no.\n\n#### Notes\nCaptured RTF can be accessed in the [[Selection.items]] property under the `public.rtf` key.",
            "type": "boolean"
        },
        "excludedApps": {
            "description": "Array of bundle identifiers for which the extension should not appear. The action will not\nappear if PopClip is used in any of the specified apps.\n\nThis property has no effect on dynamically generated actions.",
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "icon": {
            "description": "A string to define the action's icon. See [[IconString]].\n\nIf no icon is defined here, the extension's {@link Extension.icon | icon} will be used, if any.\nSetting to `null` explicitly sets the action to have no icon.",
            "type": [
                "null",
                "string"
            ]
        },
        "identifier": {
            "description": "A unique identifying string.\n\n#### Notes\n\nAn identifier for an action can be any string of your choosing.\n\nAn identifier for the extension itself, if provided, should ideally be globally unique.\n\nI suggest using a reverse DNS-style identifier. For example `com.example.myextension`.\n\nIf you don't have your own domain name, you can use anything you like — it doesn't matter, as long as it is unique.\n\nDo not use the `com.pilotmoon.` prefix for your own extension.",
            "type": "string"
        },
        "name": {
            "anyOf": [
                {
                    "$ref": "#/definitions/StringTable"
                },
                {
                    "type": "string"
                }
            ],
            "description": "The display name of this extension.\n\nIf omitted, the name is taken from the Config.json file, or else auto-generated from the package name."
        },
        "options": {
            "description": "Defines the user-configurable options for this extension.",
            "items": {
                "$ref": "#/definitions/Option"
            },
            "type": "array"
        },
        "preserveColor": {
            "description": "Whether the action's icon should be displayed in its orignal color rather than monochrome.",
            "type": "boolean"
        },
        "regex": {
            "anyOf": [
                {
                    "$ref": "#/definitions/RegExp"
                },
                {
                    "type": "string"
                }
            ],
            "description": "A regular expression to decide whether this action appears in the popup.\n\n* If no regex is specified here, the action takes the value of [[Extension.regex]].\n* If no regex is specified there either, the action will match any input.\n\n#### Notes\n\nYou may express the value either as a\n[JavaScript regular expression literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n(or otherwise constructed `RegExp` object), or as a string.\n\n* If you supply a `RegExp` it will be evaluated in the JavaScript engine.\n* If you supply a string it will be evaluated by macOS natively using the `NSRegularExpression` API (same as for 'classic' PopClip extensions).\n\nIf the regex matches the selected text, the action will be shown in the popup and\nthe first occurrence of the matched text is accessible later via {@link Input.matchedText | matchedText}.\n\nIf there is no match, the action is excluded from the popup.\n\nThe regex's `lastIndex` is reset before and after each invocation, so the `g` (global) and `y` (sticky) flags have no effect.\n\nThis property has no effect on dynamically generated actions.\n\n#### Example\n```js\nregex = /abc/i   // Example regex 'abc' with 'i' (case insensitive) flag\n                 // Matches abc, ABC, Abc, etc.\n```"
        },
        "requiredApps": {
            "description": "Array of bundle identifiers for which the extension should appear. The action will only\nappear if PopCLip is used in one of the specified apps.\n\nThis property has no effect on dynamically generated actions.",
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "requirements": {
            "description": "An array of conditions which must be met for this action to appear — see [[Requirement]].\n\n* If no array is specified here, the action takes the value of [[Extension.requirements]].\n* If no array is specified there either, the action takes the default value `[\"text\"]`.\n\n#### Notes\n\nWhen multiple conditions are specified, all of them must be satisfied.\n\nAn empty array (`[]`) indicates no requirements at all, meaning the action will always appear.\n\nThis property has no effect on dynamically generated actions.",
            "items": {
                "anyOf": [
                    {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    {
                        "enum": [
                            "!copy",
                            "!cut",
                            "!email",
                            "!emails",
                            "!formatting",
                            "!paste",
                            "!path",
                            "!text",
                            "!url",
                            "!urls",
                            "copy",
                            "cut",
                            "email",
                            "emails",
                            "formatting",
                            "paste",
                            "path",
                            "text",
                            "url",
                            "urls"
                        ],
                        "type": "string"
                    }
                ]
            },
            "type": "array"
        },
        "stayVisible": {
            "description": "Whether PopClip's popup should stay on screen after clicking this action's button. Default is no.\n\n#### Notes\nAn example of this in use is the Formatting extension.",
            "type": "boolean"
        },
        "title": {
            "anyOf": [
                {
                    "$ref": "#/definitions/StringTable"
                },
                {
                    "type": "string"
                }
            ],
            "description": "The action's title. The title is displayed in the action button if there is no icon.\nFor extensions with icons, the title is displayed in the tooltip.\n\nIf no title is defined here, the extension's [`[name]] will be used, if any."
        }
    },
    "type": "object"
}

